#!groovy

@Library("Infrastructure")

String product = "cmc"
String component = "legal-frontend"

List<LinkedHashMap<String, Object>> secrets = [
  secret('AatTestUserUsername', 'SMOKE_TEST_SOLICITOR_USERNAME'),
  secret('AatTestUserPassword', 'SMOKE_TEST_USER_PASSWORD')
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

String notificationsChannel = '#cmc-tech-notification'

withPipeline("nodejs", product, component) {
  afterCheckout {
    onMaster {
      try {
        sh """
          git fetch origin demo:demo
          git push --force origin HEAD:demo
        """
      } catch (err) {
        notifyBuildEvent channel: notificationsChannel, color: 'warning', message: 'Failed to update demo branch'
      }
    }
  }

  after('build') {
    sh 'yarn setup'
  }

  loadVaultSecrets(secrets)
  enableSlackNotifications(notificationsChannel)
}
