const verifyPageData = require('../../../data/legal-test-data').verifyPageData
const SMOKE_TEST_SOLICITOR_USERNAME = require('../../../data/test-data').SMOKE_TEST_SOLICITOR_USERNAME
const SMOKE_TEST_USER_PASSWORD = require('../../../data/test-data').SMOKE_TEST_USER_PASSWORD

Feature('Enter claim amount and submit claim')

Scenario('I can fill in Organisation details for Claimant, Defendant, Claim amount and Submit the claim @legal @quick', function * (I, legalUserSteps, legalDefendantSteps, legalAmountClaimSteps, legalDashboardSteps) {
  const userEmail = yield I.createSolicitorUser()
  legalUserSteps.loginAndStartClaim(userEmail)
  legalUserSteps.enterClaimantServiceDetails()
  legalUserSteps.enterClaimantTypeOrganisation()
  I.see('Claimant: ' + verifyPageData.claimantOrganization)
  legalUserSteps.enterClaimantAddress()
  legalUserSteps.noAdditionalClaimant()
  legalDefendantSteps.enterDefendantTypeOrganisation()
  I.see('Defendant: ' + verifyPageData.defendantOrganization)
  legalDefendantSteps.enterDefendantAddress()
  legalDefendantSteps.enterDefendantRepsCompanyName()
  I.see("Defendant's legal representative: Defendant Rep Ltd")
  legalDefendantSteps.enterDefendantRepsAddress()
  legalDefendantSteps.noAnotherDefendant()
  legalAmountClaimSteps.addRangeDetailsAndVerifyOrganisationDetails()
  let dateCheck = yield I.grabTextFrom('div.confirmation-detail')
  legalAmountClaimSteps.verifySubmittedPage(userEmail, dateCheck)
  // let legalClaimNumberText = yield I.grabTextFrom('h2.bold-medium.reference-number')
  // legalDashboardSteps.searchAndVerifyClaimDetails(legalClaimNumberText)
})

Scenario('I can fill only mandatory fields and submit the claim @legal', function * (I, legalUserSteps, legalDefendantSteps, legalAmountClaimSteps, legalDashboardSteps) {
  const userEmail = yield I.createSolicitorUser()
  legalUserSteps.loginAndStartClaim(userEmail)
  legalUserSteps.enterMandatoryClaimantServiceDetails()
  legalUserSteps.enterMandatoryClaimantAddressDetails()
  legalUserSteps.noAdditionalClaimant()
  legalDefendantSteps.enterMandatoryDefendantDetails()
  legalDefendantSteps.enterDefendantRepsCompanyName()
  legalDefendantSteps.enterDefendantRepsAddress()
  legalDefendantSteps.noAnotherDefendant()
  legalAmountClaimSteps.addMandatoryClaimDataAndSubmitClaim()
  let dateCheck = yield I.grabTextFrom('div.confirmation-detail')
  legalAmountClaimSteps.verifySubmittedPage(userEmail, dateCheck)
})

Scenario('I can fill in individual details for Claimant, Defendant, Claim amount and Submit the claim @legal @quick', function * (I, legalUserSteps, legalDefendantSteps, legalAmountClaimSteps) {
  const userEmail = yield I.createSolicitorUser()
  legalUserSteps.loginAndStartClaim(userEmail)
  legalUserSteps.enterClaimantServiceDetails()
  legalUserSteps.enterClaimantTypeIndividual()
  I.see('Claimant: Mr Benugo')
  legalUserSteps.enterClaimantAddress()
  legalUserSteps.noAdditionalClaimant()
  legalDefendantSteps.enterDefendantTypeIndividual()
  I.see('Defendant: Mr Pret')
  legalDefendantSteps.enterDefendantAddress()
  legalDefendantSteps.noDefendantCompanyName()
  legalDefendantSteps.defendantAddressAsServiceAddress()
  legalDefendantSteps.noAnotherDefendant()
  legalAmountClaimSteps.addRangeDetailsAndVerifyIndividualDetails()
  let dateCheck = yield I.grabTextFrom('div.confirmation-detail')
  legalAmountClaimSteps.verifySubmittedPage(userEmail, dateCheck)
  const pdfUrl = yield I.grabAttributeFrom('ol li a', 'href')
  const sessionCookie = yield I.grabCookie('T2_SESSION_ID')
  yield I.downloadPDF(pdfUrl, sessionCookie.value)
})

Scenario('I can fill in Organisation details for Claimant, Defendant and no Claim amount details @legal', function * (I, legalUserSteps, legalDefendantSteps, legalAmountClaimSteps) {
  const userEmail = yield I.createSolicitorUser()
  legalUserSteps.loginAndStartClaim(userEmail)
  legalUserSteps.enterClaimantServiceDetails()
  legalUserSteps.enterClaimantTypeOrganisation()
  I.see('Claimant: ' + verifyPageData.claimantOrganization)
  legalUserSteps.enterClaimantAddress()
  legalUserSteps.noAdditionalClaimant()
  legalDefendantSteps.enterDefendantTypeOrganisation()
  I.see('Defendant: ' + verifyPageData.defendantOrganization)
  legalDefendantSteps.enterDefendantAddress()
  legalDefendantSteps.enterDefendantRepsCompanyName()
  I.see("Defendant's legal representative: Defendant Rep Ltd")
  legalDefendantSteps.enterDefendantRepsAddress()
  legalDefendantSteps.noAnotherDefendant()
  legalAmountClaimSteps.addNoClaimDataAndVerifyData()
})

Scenario('Check personal injury more than 1000 @legal', function * (I, legalUserSteps, legalAmountClaimSteps) {
  const userEmail = yield I.createSolicitorUser()
  legalUserSteps.loginAndStartClaim(userEmail)
  legalAmountClaimSteps.personalInjuryMoreThan1000()
  I.seeInCurrentUrl('housing-disrepair')
})

Scenario('Check housing disrepair more than 1000 @legal', function * (I, legalUserSteps, legalAmountClaimSteps) {
  const userEmail = yield I.createSolicitorUser()
  legalUserSteps.loginAndStartClaim(userEmail)
  legalAmountClaimSteps.housingDisrepairMoreThan1000()
  I.seeInCurrentUrl('summarise-the-claim')
})

Scenario('Check housing disrepair less than 1000 and no other damages @legal', function * (I, legalUserSteps, legalAmountClaimSteps) {
  const userEmail = yield I.createSolicitorUser()
  legalUserSteps.loginAndStartClaim(userEmail)
  legalAmountClaimSteps.housingDisrepairLessThan1000AndNoOtherDamages()
  I.seeInCurrentUrl('summarise-the-claim')
})

Scenario('Check higher value in amount claim Page @legal', function * (I, legalUserSteps, legalAmountClaimSteps) {
  const userEmail = yield I.createSolicitorUser()
  legalUserSteps.loginAndStartClaim(userEmail)
  legalAmountClaimSteps.enterOnlyHigherValueAmount()
  I.seeInCurrentUrl('total')
})

Scenario('I can fill both Claimant, Defendant details move up to submit claim @legal-smoke-test', function * (I, legalUserSteps, legalDefendantSteps, legalAmountClaimSteps, legalDashboardSteps) {
  legalUserSteps.loginAndStartClaim(SMOKE_TEST_SOLICITOR_USERNAME, SMOKE_TEST_USER_PASSWORD)
  legalUserSteps.enterClaimantServiceDetails()
  legalUserSteps.enterClaimantTypeOrganisation()
  I.see('Claimant: ' + verifyPageData.claimantOrganization)
  legalUserSteps.enterClaimantAddress()
  legalUserSteps.noAdditionalClaimant()
  legalDefendantSteps.enterDefendantTypeOrganisation()
  I.see('Defendant: ' + verifyPageData.defendantOrganization)
  legalDefendantSteps.enterDefendantAddress()
  legalDefendantSteps.enterDefendantRepsCompanyName()
  I.see("Defendant's legal representative: Defendant Rep Ltd")
  legalDefendantSteps.enterDefendantRepsAddress()
  legalDefendantSteps.noAnotherDefendant()
  legalAmountClaimSteps.addAmountAndVerifyDetails()
  I.see('Pay by Fee Account')
})

